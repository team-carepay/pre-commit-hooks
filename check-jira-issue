#!/usr/bin/env bash

JIRA_HOSTNAME=jira.atlassian.com
BRANCHNAME="$(git rev-parse --abbrev-ref HEAD)"

while [[ $# -gt 0 ]]; do
case $1 in
    --auth) JIRA_AUTH="$2"; shift; shift ;;
    -p|--password) JIRA_USERNAME="$2"; shift; shift ;;
    -u|--username) JIRA_API_TOKEN="$2"; shift; shift ;;
    -h|--host) JIRA_HOSTNAME="$2"; shift; shift ;;
    *) shift ;;
esac
done

# Read JIRA API token from .gitconfig: section [user], key jira-api-token
if [[ -z "$JIRA_AUTH" ]]; then
  if [[ -z "$JIRA_USERNAME" ]]; then
    JIRA_USERNAME=$(git config --get user.email)
  fi
  if [[ -z "$JIRA_API_TOKEN" ]]; then
    JIRA_API_TOKEN=$(git config --get user.jira-api-token)
  fi
  if [[ -z "$JIRA_USERNAME" || -z "$JIRA_API_TOKEN" ]]; then
    echo "Missing JIRA username or API token" >& 2
    exit 1
  fi
  JIRA_AUTH="$JIRA_USERNAME:$JIRA_API_TOKEN"
fi

if [[ ! -x "$(command -v jq)" && -x "$(command -v curl)" ]]; then
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    curl -s -o /usr/local/bin/jq -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
    chmod +x /usr/local/bin/jq
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    curl -s -o /usr/local/bin/jq -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-osx-amd64
    chmod +x /usr/local/bin/jq
  elif [[ "$OSTYPE" == "cygwin" || "$OSTYPE" == "msys" || "$OSTYPE" == "win32" ]]; then
    curl -s -o /usr/local/bin/jq.exe -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-win64.exe
    chmod +x /usr/local/bin/jq.exe
  fi
fi

if [[ "$BRANCHNAME" =~ ^(bugfix|feature|hotfix|chore|epic|subtask|release)/([A-Za-z0-9]+-[0-9]+) ]]; then
  ISSUE=${BASH_REMATCH[2]}
  STATUS=$(curl -s -u "$JIRA_AUTH" https://$JIRA_HOSTNAME/rest/api/latest/issue/$ISSUE\?fields\=status | jq -r .fields.status.statusCategory.name)
  if [[ "$STATUS" =~ ^(In Progress|To Do)$ ]]; then
    echo "Valid branch name $BRANCHNAME, status is $STATUS"
  else
    echo "JIRA issue $ISSUE has invalid status: $STATUS" >&2
    exit 1
  fi
elif [[ "$BRANCHNAME" =~ ^(master|main|HEAD)$ ]]; then
  echo "Branch is $BRANCHNAME, skipping validation for master"
else
  echo "Invalid branch name $BRANCHNAME, should be: (bugfix|feature|hotfix|chore|epic|subtask|release)/JIRA-issuenumber, e.g. bugfix/CLAIM-123-short-description" >&2
  exit 1
fi
